name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      checks: write
      pull-requests: write
      packages: write

    outputs:
      GitBuildVersionSimple: ${{ steps.version.outputs.GitBuildVersionSimple }}

    env:
      Configuration: Release
      RepositoryUrl: https://github.com/${{ github.repository }}
      source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # full history

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore dependencies
        run: |
          dotnet restore
          dotnet tool restore

      - name: Build
        run: dotnet build --no-restore -p:RepositoryUrl=${{ env.RepositoryUrl }} /bl

      - name: Get version
        id: version
        run: echo "GitBuildVersionSimple=$GitBuildVersionSimple" >> "$GITHUB_OUTPUT"

      - name: Test
        run: dotnet test --no-build --verbosity normal --logger trx

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2.20.0
        if: always()
        with:
          trx_files: "${{ github.workspace }}/**/*.trx"

      # Regenerate the README file so that it is compatible with NuGet.org Markdown restrictions
      - name: README
        run: dotnet mdsnippets --omit-snippet-links true

      - name: Pack
        run: dotnet pack --no-build -p:RepositoryUrl=${{ env.RepositoryUrl }}

      - name: NuGet package
        uses: actions/upload-artifact@v4
        with:
          name: nupkg
          path: src/Tasks/bin/Release/*.nupkg

      - name: Publish the package to GPR
        run: dotnet nuget push "src/Tasks/bin/Release/*.nupkg" --source ${{ env.source-url }} -k ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
        if: github.ref == 'refs/heads/main'

  update_release_draft:
    name: Update release draft
    runs-on: ubuntu-latest
    needs: [build]

    if: github.ref == 'refs/heads/main' # Running this job only for main branch
    steps:
      - uses: actions/checkout@v4

      - uses: release-drafter/release-drafter@v6
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: ${{ needs.build.outputs.GitBuildVersionSimple }}

      - uses: actions/download-artifact@v5

      - name: Display structure of downloaded files
        run: ls -R

      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"

      - name: Upload assets
        uses: xresloader/upload-to-github-release@v1
        with:
          file: "./nupkg/**/*.nupkg"
          delete_file: "*.nupkg"
          overwrite: true
          release_id: ${{ steps.create_release.outputs.id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
